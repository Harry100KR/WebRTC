version: "3.8"

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    ports:
      - "443:443" # HTTPS
      - "80:80" # HTTP redirect to HTTPS
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=https://api.${DOMAIN:-localhost}
      - REACT_APP_TURN_URL=${TURN_SERVER_URL}
      - REACT_APP_TURN_USERNAME=${TURN_SERVER_USERNAME}
      - REACT_APP_TURN_CREDENTIAL=${TURN_SERVER_CREDENTIAL}
    volumes:
      - ./ssl:/etc/nginx/ssl:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - server
    networks:
      - webrtc_net

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    expose:
      - "5000"
    environment:
      - NODE_ENV=production
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - ALLOWED_ORIGINS=https://${DOMAIN:-localhost}
      - TURN_SERVER_URL=${TURN_SERVER_URL}
      - TURN_SERVER_USERNAME=${TURN_SERVER_USERNAME}
      - TURN_SERVER_CREDENTIAL=${TURN_SERVER_CREDENTIAL}
      - ENABLE_HELMET=true
      - ENABLE_XSS_PROTECTION=true
      - ENABLE_HSTS=true
      - ENABLE_NOSNIFF=true
      - ENABLE_FRAME_GUARD=true
      - TRUST_PROXY=1
    depends_on:
      - postgres
      - redis
    networks:
      - webrtc_net

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - webrtc_net
    command: postgres -c ssl=on -c ssl_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem -c ssl_key_file=/etc/ssl/private/ssl-cert-snakeoil.key

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    networks:
      - webrtc_net

  minio:
    image: minio/minio
    restart: unless-stopped
    expose:
      - "9000"
      - "9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - webrtc_net

networks:
  webrtc_net:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  minio_data:
